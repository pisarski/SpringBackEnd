package com.lumesse.exception;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * Simple POJO used to store custom validation errors - generated by business
 * logic.
 */
public class CustomError {

	private final String field;
	private final String errorCode;
	private Object[] messageVariables;

	public CustomError(String field, String errorCode) {
		this(field, errorCode, null, null);
	}

	public CustomError(String field, String errorCode,
			Map<String, ? extends Serializable> messageVariables,
			Object rejectedValue) {
		this.field = field;
		this.errorCode = errorCode;
		initMessageVariables(messageVariables, rejectedValue);
	}

	public String getField() {
		return field;
	}

	public String getErrorCode() {
		return errorCode;
	}

	public Object[] getMessageVariables() {
		return messageVariables;
	}

	public void setMessageVariables(Object[] messageVariables) {
		this.messageVariables = messageVariables;
	}

	private void initMessageVariables(
			Map<String, ? extends Serializable> variablesArg,
			Object rejectedValue) {
		Map<String, ? extends Serializable> variables = (variablesArg == null) ? new HashMap<>()
				: variablesArg;

		List<String> keys = variables.keySet().stream().sorted()
				.collect(Collectors.toList());
		List<Object> values = new ArrayList<>();
		values.add(rejectedValue);
		for (String key : keys) {
			values.add(variables.get(key));
		}

		this.messageVariables = values.toArray();
	}

}
